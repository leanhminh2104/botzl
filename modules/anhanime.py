from zlapi.models import Message
import requests
import os
from config import *

des = {
    'version': "1.0.3",
    'credits': "LAMDev",
    'description': "G·ª≠i ·∫£nh anime ng·∫´u nhi√™n t·ª´ nhi·ªÅu API"
}

# Danh s√°ch nhi·ªÅu API
API_URL_LIST = [
    "https://api-dowig.onrender.com/images/anime",
    "https://api.sumiproject.net/images/anime",
    "https://api-dowig.onrender.com/images/gura",
    "https://api-dowig.onrender.com/images/itachi"
    "https://api-dowig.onrender.com/images/mirai"
]

# Lo·∫°i b·ªè ki·ªÉm tra nh√≥m v√† admin, cho ph√©p m·ªçi ng∆∞·ªùi ƒë·ªÅu c√≥ th·ªÉ s·ª≠ d·ª•ng
def handle_anhgai_command(message, message_object, thread_id, thread_type, author_id, client):
    try:
        retries = 3  # Th·ª≠ l·∫°i t·ªëi ƒëa 3 l·∫ßn cho m·ªói API
        for api_url in API_URL_LIST:
            for attempt in range(retries):
                try:
                    # G·ªçi API v√† l·∫•y d·ªØ li·ªáu ·∫£nh
                    response = requests.get(api_url, timeout=5)
                    response.raise_for_status()
                    data = response.json()
                    image_url = data.get('url')

                    if image_url:
                        # T·∫£i ·∫£nh t·ª´ URL v√† l∆∞u v√†o file t·∫°m
                        image_response = requests.get(image_url)
                        image_path = 'temp_image.jpeg'

                        with open(image_path, 'wb') as f:
                            f.write(image_response.content)

                        # G·ª≠i ·∫£nh v·ªõi TTL
                        client.sendLocalImage(
                            image_path, 
                            thread_id=thread_id,
                            thread_type=thread_type,
                            width=1200,
                            height=1600,
                            message=Message(text="üñºÔ∏è ·∫¢nh anime cho b·∫°n n√®! üíñ"),
                            ttl=60000  # Th√™m ttl v√†o ƒë√¢y
                        )

                        # X√≥a file t·∫°m sau khi g·ª≠i
                        os.remove(image_path)
                        return  # N·∫øu th√†nh c√¥ng th√¨ tho√°t kh·ªèi v√≤ng l·∫∑p

                except requests.exceptions.RequestException as e:
                    # N·∫øu API b·ªã l·ªói, th·ª≠ l·∫°i API kh√°c
                    if attempt == retries - 1:
                        continue
                    else:
                        continue

        # N·∫øu t·∫•t c·∫£ c√°c API ƒë·ªÅu b·ªã l·ªói
        error_message = Message(text="‚ùå Kh√¥ng th·ªÉ l·∫•y ·∫£nh t·ª´ b·∫•t k·ª≥ API n√†o.")
        client.sendMessage(error_message, thread_id, thread_type, ttl=30000)

    except Exception as e:
        # L·ªói chung khi kh√¥ng x·ª≠ l√Ω ƒë∆∞·ª£c
        error_message = Message(text=f"‚ùå ƒê√£ x·∫£y ra l·ªói: {str(e)}")
        client.sendMessage(error_message, thread_id, thread_type, ttl=30000)

def get_tmii():
    return {
        'anhanime': handle_anhgai_command
    }
